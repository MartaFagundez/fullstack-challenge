{
  "info": {
    "_postman_id": "6705140c-f442-4511-b6a5-56efc78f0fcb",
    "name": "Fullstack Challenge API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Colección Postman para la API (V2). Incluye endpoints, ejemplos y tests.\nUsa la variable baseUrl (por defecto http://localhost:5000)."
  },
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "GET /health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "health"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () { pm.response.to.have.status(200); });",
                  "const json = pm.response.json();",
                  "pm.test('status ok', function () { pm.expect(json.status).to.eql('ok'); });"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "POST /users (create)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Grace Hopper\",\n  \"email\": \"grace@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 201', function () { pm.response.to.have.status(201); });",
                  "const json = pm.response.json();",
                  "pm.test('Tiene id, name, email, created_at', function () {",
                  "  pm.expect(json).to.have.property('id');",
                  "  pm.expect(json).to.have.property('name');",
                  "  pm.expect(json).to.have.property('email');",
                  "  pm.expect(json).to.have.property('created_at');",
                  "});",
                  "pm.collectionVariables.set('lastUserId', json.id);",
                  "pm.collectionVariables.set('lastUserEmail', json.email);"
                ]
              }
            }
          ]
        },
        {
          "name": "GET /users (list)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users?page=1&limit=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
                  "const json = pm.response.json();",
                  "pm.test('Tiene items[] y total', function () {",
                  "  pm.expect(json).to.have.property('items');",
                  "  pm.expect(json).to.have.property('total');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "GET /users/:id/orders (by user)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/orders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "{{userId}}",
                "orders"
              ]
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (!pm.variables.get('userId')) {",
                  "  const last = pm.collectionVariables.get('lastUserId') || 1;",
                  "  pm.variables.set('userId', last);",
                  "}"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
                  "const json = pm.response.json();",
                  "pm.test('items es array', function () { pm.expect(Array.isArray(json.items)).to.be.true; });"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Orders",
      "item": [
        {
          "name": "POST /orders (create)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_id\": {{lastUserId}},\n  \"product_name\": \"Cuaderno A4\",\n  \"amount\": 12.5\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "orders"
              ]
            }
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (!pm.collectionVariables.get('lastUserId')) {",
                  "  pm.collectionVariables.set('lastUserId', 1);",
                  "}"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 201', function () { pm.response.to.have.status(201); });",
                  "const json = pm.response.json();",
                  "pm.test('amount es número > 0', function () { pm.expect(json.amount).to.be.above(0); });",
                  "pm.collectionVariables.set('lastOrderId', json.id);"
                ]
              }
            }
          ]
        },
        {
          "name": "GET /orders (list + user)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders?page=1&limit=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "orders"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
                  "const json = pm.response.json();",
                  "pm.test('items[] incl. user', function () {",
                  "  if (json.items.length) {",
                  "    pm.expect(json.items[0]).to.have.property('user');",
                  "  } else {",
                  "    pm.expect(json.items).to.be.an('array');",
                  "  }",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000"
    }
  ]
}